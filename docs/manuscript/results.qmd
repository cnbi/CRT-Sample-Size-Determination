---
title: "results_FindN1"
author: "Camila N. Barragan I."
format: html
editor: visual
---

# Finding Cluster Sizes

```{r}
library(ggplot2)
library(dplyr) # For formatting the tables
library(scales) # For scales in plots
library(latex2exp)
library(purrr) # For formatting the tables
library(plotly)
library(xtable)

```

## Data

```{r}
final_results_FindN1 <- readRDS("~/GitHub/CRT-Sample-Size-Determination/scripts/results_SimulationFindN1/final_results_FindN1.RDS")
final_times_FindN1 <- readRDS("~/GitHub/CRT-Sample-Size-Determination/scripts/results_SimulationFindN1/final_times_FindN1.RDS")
```

# Results

## Values of Bayes factor

```{r}
## Change labels
rho_labs <- c("ICC: 0.025", "ICC: 0.05", "ICC: 0.1")
names(rho_labs) <- c("0.025", "0.05", "0.1")
eff_size_labs <- c(paste0("\u03B4 0.2"), paste0("\u03B4 0.5"), paste0("\u03B4 0.8"))
names(eff_size_labs) <- c("0.2", "0.5", "0.8")

ggplot(final_results_FindN1[final_results_FindN1$b == 1, ], aes(y = median.BF01, x = n1.final, color = as.factor(n2), shape = as.factor(n2))) +
    geom_point() + geom_line() +
    scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") +
    facet_grid(rows = vars(rho), cols = vars(eff_size), labeller = labeller(rho = rho_labs, eff_size = eff_size_labs)) +
    labs(title = "Bayes Factor H0 vs H1", color = "Number of clusters", shape = "Number of clusters") +
    xlab("Cluster sizes") + ylab("Bayes Factor") + theme(legend.position = "bottom")
```

In the plots can be seen that in some conditions, increasing the cluster size does not lead to increasing the median Bayes factor. In addition, it cannot be seen clearly the difference between the different thresholds (points), which means that increasing the threshold does not affect the required cluster size to reach the power criterion. At the same time, there is no increase in the median of the Bayes factor. Regarding the effect size, it can be seen in this plot that there are no changes in the plots between $\delta = 0.5$ and $\delta = 0.8$. On the other hand, for $\delta = 0.8$ the median of the Bayes factor are higher than for larger effect sizes. In relation to the ICC, it seems that increasing the ICC leads to smaller values of median Bayes factor.

```{r}
ggplot(final_results_FindN1[final_results_FindN1$b == 1, ], aes(y = log(median.BF10), x = n1.final, color = as.factor(n2), shape = as.factor(n2))) +
    geom_point() + geom_line() +
    scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") +
    facet_grid(rows = vars(rho), cols = vars(eff_size), labeller = labeller(rho = rho_labs, eff_size = eff_size_labs)) +
    labs(title = "Bayes Factor H1 vs H0", color = "Number of clusters", shape = "Number of clusters") +
    xlab("Cluster sizes") + ylab("log Bayes Factor") + theme(legend.position = "bottom")
```

When the alternative hypothesis is true, the pattern aforementioned frot he different thresholds can be seen. However, for the effect sizes, the tendency is conversely; larger effect sizes leads to larger values of median of Bayes factors. Moreover, the values of the Bayes factor are considerably higher than the values when the null hypothesis is true. Regarding the ICC, lower values of ICC produce higher medians of Bayes factor. It is interesting that it seems that the different thresholds do not affect the cluster sizes and median Bayes factor for most cases, specially for those scenarios with large number of clusters. Finally, the medians of Bayes factor are higher for larger number of clusters.

### Comparing b

```{r}
ggplot(final_results_FindN1, aes(y = median.BF01, x = n1.final, color = as.factor(n2), shape = as.factor(n2))) +
    geom_point() + geom_line(aes(linetype = as.factor(b))) +
    scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") +
    facet_grid(rows = vars(rho), cols = vars(eff_size), labeller = label_both) +
    labs(title = "Bayes Factor H0 vs H1", subtitle = "H0:Dintervention=Dcontrol \nH1:Dintervention>Dcontrol") +
    xlab("Cluster size") + ylab("Bayes Factor")
```

In the plot it can be seen that for low number of clusters, the b fraction has an important effect on the median of Bayes factor values; the higher the fraction b the lower the median. Moreover, increasing the ICC leads to larger cluster sizes, but the medians of Bayes factor are maintained. Regarding effect sizes, there is an inverse relation with the magnitude of the Bayes factor and b, the smaller the effect and b fraction, the bigger the medians of Bayes factor. In addition, it is visible that scenarios with less number of clusters reached the maximum cluster sizes, but maintained the medians. For the conditions with high ICC numerous scenarios reached the maximum cluster size. Finally, larger b means larger cluster sizes, especially when the ICC is large.

```{r}
ggplot(final_results_FindN1, aes(y = log(median.BF10), x = n1.final, color = as.factor(n2), shape = as.factor(n2))) +
    geom_point() + geom_line(aes(linetype = as.factor(b))) +
    scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") +
    facet_grid(rows = vars(rho), cols = vars(eff_size), labeller = label_both) +
    labs(title = "Bayes Factor H1 vs H0", subtitle = "H0:Dintervention=Dcontrol \nH1:Dintervention>Dcontrol") +
    xlab("Cluster size") + ylab("log Bayes Factor")
```

In general, the values of median Bayes factor are abruptly higher than when the null hypothesis is true. For smaller effect sizes the values of median Bayes factor are smaller. In addition, it is possible to see more clear the difference between the values of b fraction on the median Bayes factor. It is necessary larger cluster sizes to reach the power criterion in general, but it is particularly notorious the increase when the ICC is high ($\rho=0.1$). For lower number of clusters, the medians of Bayes factor are smaller. In accordance to the previous plot, larger b fraction to specify the prior translates to larger cluster sizes. However, in this case it seems that we larger b fraction and larger cluster sizes produce larger medians of Bayes factor.

Is there an interaction between b fraction and number of clusters?

```{r}
ggplotly()
```

## Bayesian Power

```{r}
ggplot(final_results_FindN1[final_results_FindN1$b == 1, ], aes(y = eta.BF01, x = n1.final, color = as.factor(n2), shape = as.factor(n2))) + geom_point() + geom_line() +
    scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") +
    facet_grid(rows = vars(rho), cols = vars(eff_size), labeller = labeller(rho = rho_labs, eff_size = eff_size_labs)) +
    labs(title = "Bayes Factor H0 vs H1", color = "Number of clusters", shape = "Number of clusters") +
    xlab("Cluster sizes") + ylab("Porbability of Bayes factor larger than threshold") + theme(legend.position = "bottom")
```

Effectively, the points in the plots are the $BF_{thresh}$. In the plots can be seen that for effect sizes of 0.5 and 0.8 , regardless of the other factors the cluster sizes are similar and the probabilities are similar. Is not possible to detect with the plots difference according to the ICC. The biggest differences in the probabilities seems to be due to the thresholds and the number of clusters. Finally, only in cases with small number of clusters and high, the power criterion is not met even after reaching 1000 individuals per cluster.

```{r}
ggplotly()
```

```{r}
ggplot(final_results_FindN1[final_results_FindN1$b == 1, ], aes(y = eta.BF10, x = n1.final, color = as.factor(n2), shape = as.factor(n2))) +    geom_point() + geom_line() + scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") + facet_grid(rows = vars(rho), cols = vars(eff_size), labeller = labeller(rho = rho_labs, eff_size = eff_size_labs)) + labs(title = "Bayes Factor H1 vs H0", color = "Number of clusters", shape = "Number of clusters") + xlab("Cluster sizes") + ylab("Probability of Bayes factor larger than threshold") + theme(legend.position = "bottom") + geom_hline(yintercept = 0.8)
```

Almost all combinations reach the power criterion, except for some conditions with small number of clusters. Larger effect sizes render larger probability of of exceeding the threshold with the minimum cluster size. The ICC seems to interact with the number of clusters, thus the higher ICC and lower number of cluster requires larger cluster sizes to reach the power criterion, specially when the threshold is high.

```{r}
ggplotly()
```

### Comparing b

```{r}
ggplot(final_results_FindN1, aes(y = eta.BF01, x = n1.final, color = as.factor(n2), shape = as.factor(n2))) + geom_point() + geom_line(aes(linetype = as.factor(b))) +
    scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") +
    facet_grid(rows = vars(rho), cols = vars(eff_size), labeller = labeller(rho = rho_labs, eff_size = eff_size_labs)) +
    labs(title = "Null hypothesis true", linetype = "Fraction b", color = "Number of clusters", shape = "Number of clusters") + xlab("Cluster sizes") + ylab("Probability of Bayes factor larger than threshold") + geom_hline(yintercept = 0.8) + theme(legend.position = "bottom")
```

In the plot can be seen that some scenarios cannot meet the power criterion and reach the maximum sample size of 1000 subjects per cluster. This happens in different scenarios regardless of the effect size, however it can be noticed that in general with smaller effect sizes it is required larger cluster sizes, and that there are no differences between $\delta=0.8$ and $\delta=0.8$. It is interesting that apparently larger cluster sizes are needed for $b=2$ than for 3 and 1. Regarding the ICC, it is as expected, with larger coefficients, more individuals are required and even after reaching 1000 the power criterion is not met. This happens specially when the effect size is small and the intraclass correlation is large. The number of clusters has an important role in determining the cluster size, it can be seen in the plot that when the number of clusters is large the power criterion is met in almost all conditions, and only when the ICC is high the cluster sizes reaches the maximum and do not meet the criterion. For the smallest number of clusters, with intraclass coefficients larger than 0.025 the power criterion is not met or reached 1000. Finally, regarding the threshold it is clear that increasing the Bayes factor larger than 1 yield the maximum sample when the effect size is small, however, when the coefficient of intraclass is large and b is larger than 1, the sample size can reach the maximum sample size and not meet the power criterion.

```{r}
ggplotly()
```

\-\-\--

```{r}
ggplot(final_results_FindN1, aes(y = eta.BF10, x = n1.final, color = as.factor(n2), shape = as.factor(n2))) + geom_point() + geom_line(aes(linetype = as.factor(b))) +
    scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") +
    facet_grid(rows = vars(rho), cols = vars(eff_size), labeller = labeller(rho = rho_labs, eff_size = eff_size_labs)) +
    labs(title = "Alternative hypothesis is true", linetype = "Fraction b", color = "Number of clusters", shape = "Number of clusters") + xlab("Cluster sizes") + ylab("Probability of Bayes factor larger than threshold") + geom_hline(yintercept = 0.8) + theme(legend.position = "bottom")
```

When the alternative hypothesis is true it is easy to reach the power criterion with small cluster sizes. It seems that the power is larger when the effect size is large, while the power is around the probability of the power criterion when the effect size is small. Increasing the ICC means that more subjects per cluster are needed, however, the difference in the number of subjects seems to be big when there is an interaction with other factors such as the low number of clusters, b fraction and the threshold. Small number of clusters has the tendency to require the maximum number of clusters when the threshold is increased and the faction b is large. Only when the effect size is small and the number of clusters is small, the power criterion is not reached.

```{r}
ggplotly()
```

## Final sample sizes

```{r}
ggplot(final_results_FindN1, aes(x = n2, y = n1.final, color = as.factor(BF_threshold), shape = as.factor(BF_threshold))) +
    geom_point() + geom_line(aes(linetype = as.factor(b))) +
    scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") +
    facet_grid(rows = vars(rho), cols = vars(eff_size), labeller = labeller(rho = rho_labs, eff_size = eff_size_labs)) +
    labs(title = "Determining Cluster Sizes in Function of Number of Cluster, Bayes Factor \nThresholds, Effect sizes,and Intraclass Correlations",  
         color = "Bayes Factor \nThresholds", shape = "Bayes Factor \nThresholds", linetype = "Fraction b") + xlab("Number of clusters") + ylab("Cluster sizes") + theme(legend.position = "bottom")
```

As expected, increasing the number of clusters yield smaller cluster sizes. One of the factors that seems to have an important impact on the cluster size required beside the number of clusters is the ICC, with ICC larger than 0.025 is possible to reach the maximum sample size. Regarding the effect size, it behaves the same whether the effect is 0.5 or 0.8 whereas when the effect is small it may require more subjects per cluster. From the plot it is possible to conclude that when the threshold is 5 it is necessary to increase the sample size. It is possible to see a clear change around number of cluster equal to 60. When the effect size is small and the intraclass correlation is high, regardless of the threshold and b, is necessary to enrol 1000 participants.

```{r}
ggplotly()
```

## Time

```{r}
ggplot(final_times_FindN1, aes(y = (total.time/60), x = n2, color = as.factor(BF_threshold), shape = as.factor(BF_threshold))) + geom_point() + geom_line() + scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") + facet_grid(rows = vars(rho), cols = vars(eff_size), labeller = labeller(rho = rho_labs, eff_size = eff_size_labs)) +
    labs(title = "Running time", color = "Bayes Factor \nThresholds", shape = "Bayes Factor \nThresholds") + xlab("Number of clusters") + ylab("Time (hours)") + theme(legend.position = "bottom")
```

```{r}
ggplotly()
```

# Tables

```{r}
table_results <- c("rho", "BF_threshold", "n2", "n1.final", "eta.BF10", "eta.BF01")
effect.size0.2 <- final_results_FindN1[which(final_results_FindN1$b == 1 & final_results_FindN1$eff_size == 0.2),table_results]
effect.size0.2 <- effect.size0.2[order(effect.size0.2$rho, effect.size0.2$BF_threshold, effect.size0.2$n2), ]
results_colnames <- c("ICC", "$BF_{thresh}$", "N1", "N2", "$P(BF_{10}>BF_{thresh})$", "$P(BF_{01}>BF_{thresh})$")
colnames(effect.size0.2) <- results_colnames

```

```{r}
try_tr <- effect.size0.2[rep(1:nrow(effect.size0.2), each = 2), ]
try_tr[1:nrow(try_tr) %% 2 == 0, ] <- NA
try_tr <- try_tr[, 1:ncol(effect.size0.2) - 1]
colnames(try_tr) <- c("ICC", "$BF_{thresh}$", "N1", "N2", "$P(BF_>BF_{thresh})$")
try_tr[1:nrow(try_tr) %% 2 == 0, "$P(BF_>BF_{thresh})$"] <- effect.size0.2$`$P(BF_{01}>BF_{thresh})$`
try_tr$scenario <- c("H1", "H0")
nrow_result <- nrow(try_tr)/3

results_new_format <- try_tr[1:nrow_result, 2:ncol(try_tr)]

for (index in 1:2) {
  new_col <- try_tr[((nrow_result*index) + 1):((nrow_result*index) + nrow_result), c("N2", "$P(BF_>BF_{thresh})$")]
  results_new_format <- cbind(results_new_format, new_col)
}
results_new_format <- results_new_format[, c(1, 2, 5, 3, 4, 6, 7, 8, 9)]
results_new_format[, c(5, 7, 9)] <- lapply(results_new_format[, c(5, 7, 9)], function(x) format(x, nsmall = 3))
print(xtable(results_new_format), include.rownames = FALSE)
```
