---
title: "Finding Number of Clusters with Informative Hypotheses"
author: "CNBI"
format: html
editor: visual
---

## Data

```{r}
# Libraries
library(ggplot2)
library(scales) # For scales in plots
library(purrr) # For formatting the tables
library(plotly)
library(xtable)

# Data
final_results_FindN2 <- readRDS("~/GitHub/CRT-Sample-Size-Determination/scripts/results/Inform/final_results_FindN2.RDS")
final_times_findN2 <- readRDS("~/GitHub/CRT-Sample-Size-Determination/scripts/results/Inform/final_times_findN2.RDS")
```

## Results

### Bayes factor

```{r}
## Change labels
rho_labs <- c("ICC: 0.025", "ICC: 0.05", "ICC: 0.1")
names(rho_labs) <- c(0.025, 0.05, 0.1)
eff_size_labs <- c(paste0("\u03B4 = 0.2"), paste0("\u03B4 = 0.5"), paste0("\u03B4 = 0.8"))
names(eff_size_labs) <- c(0.2, 0.5, 0.8)

#plot
ggplot(final_results_FindN2, aes(y = log(median.BF12), x = n2.final, color = as.factor(n1), shape = as.factor(n1))) + geom_point() + geom_line() + scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") + facet_grid(rows = vars(rho), cols = vars(eff_size), labeller = labeller(rho = rho_labs, eff_size = eff_size_labs)) + labs(title = "Bayes Factor H1 vs H2", color = "Cluster sizes", shape = "Cluster sizes") + xlab("Number of clusters") + ylab("log Bayes Factor") + theme(legend.position = "bottom")
```

For effect sizes of 0.5 and 0.8, the value of Bayes factor (log Bayes factor) depends mainly on the ICC and the cluster sizes. This means that the value is not affected by the values of the thresholds. It can be seen that for these cases of effect sizes, the largest the cluster size the largest the Bayes factor. On the other hand, as expected, the ICC has a negative relationship with the value of Bayes factor. Now, for the effect size of 0.2, it is clear that there is a difference in the values of Bayes factors and the number of clusters depending on the thresholds and the cluster sizes. The value of Bayes factor has a positive relation with the thresholds, whereas, a negative relation with the cluster sizes. It is also important to note that the required number of cluster sizes vary when the effect size is small and as the Bayes factor threshold and ICC increase.

```{r}
ggplotly()
```

### Bayesian Power

```{r}
ggplot(final_results_FindN2, aes(y = eta.BF12, x = n2.final, color = as.factor(n1), shape = as.factor(n1))) + geom_point() + geom_line() +
    scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") +
    facet_grid(rows = vars(rho), cols = vars(eff_size), labeller = labeller(rho = rho_labs, eff_size = eff_size_labs)) +
    labs(title = "Bayes Factor H0 vs H1", color = "Cluster sizes", shape = "Cluster sizes") +
    xlab("Number of clusters") + ylab("Probability of Bayes factor larger than threshold") + theme(legend.position = "bottom") + geom_hline(yintercept = 0.8)
```

The plot shows that the probability increases in function of the different variables. First, the effect size has a positive relation with the probability, thus the probability increases when the effect size increments. It seems that ICC has a negative effect, however it seems that this effect affects slightly the probability. Regarding the cluster sizes, it is as we have seen in previous results, larger probability for larger cluster sizes. Finally, it is possible to notice that the required number of clusters is the minimum for effect sizes of 0.5 and 0.8. However, for effect size equal to 0.2 the required number of clusters is a function of the ICC, Bayes factor threshold,a nd number of clusters.

The probability also decreases while increasing the threshold.

### Final Sample Size

```{r}
ggplot(final_results_FindN2, aes(x = n1, y = n2.final, color = as.factor(BF_threshold), shape = as.factor(BF_threshold))) +
    geom_point() + geom_line() +
    scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") +
    facet_grid(rows = vars(rho), cols = vars(eff_size), labeller = labeller(rho = rho_labs, eff_size = eff_size_labs)) +
    labs(title = "Determining Cluster Sizes in Function of Number of Cluster, Bayes Factor \nThresholds, Effect sizes,and Intraclass Correlations",  
         color = "Bayes Factor \nThresholds", shape = "Bayes Factor \nThresholds") + xlab("Cluster sizes") + ylab("Number of clusters") + theme(legend.position = "bottom")
```

In conclusion, the required number of clusters is the minimum when the effect size is 0.5 or 0.8, regardless of the Bayes factor threshold, ICC and cluster size. When the effect size is small (0.2), the required number of cluster decreases while increasing the cluster sizes. In contrast, the number of clusters increases as the thresholds and ICC increase.

### Running Time

# Paper

```{r}
#Filter table
table_results <- c("rho", "eff_size", "BF_threshold", "n1.final", "n2.final", "eta.BF12")
results_colnames <- c("ICC", "Effect Size", "$BF_{thresh}$", "N1", "N2", "$P(BF_{12}>BF_{thresh})$")
filtered_df <- final_results_FindN2 %>% filter(eff_size == 0.2 | eff_size == 0.5) %>% select(all_of(table_results)) %>% arrange(rho, eff_size, BF_threshold, n1.final) %>% rename_with(~results_colnames, all_of(table_results))

# Move the ICC values to columns
nrow_result <- nrow(filtered_df)/3
results_new_format <- filtered_df[1:nrow_result, 2:ncol(filtered_df)]
for (index in 1:2) {
    new_col <- filtered_df[((nrow_result*index) + 1):(nrow_result * (index + 1)), c("N2", "$P(BF_{12}>BF_{thresh})$")]
    results_new_format <- cbind(results_new_format, new_col)
}
names(results_new_format) <- c("Effect Size", "$BF_{thresh}$", "N1", "N2.ICC0025.eff02", "$P(BF_>BF_{thresh})$.1", "N2.ICC005.eff02", "$P(BF_>BF_{thresh})$.2", "N2.ICC01.eff02", "$P(BF_>BF_{thresh})$.3")

# Create new columns and move the values from different effect sizes to columns
nrow_result <- nrow(results_new_format)/2
final_table_modified <- results_new_format[1:nrow_result, 2:ncol(results_new_format)]
new_cols <- results_new_format[(nrow_result + 1):(nrow_result * 2), c("N2.ICC0025.eff02", "$P(BF_>BF_{thresh})$.1", "N2.ICC005.eff02", "$P(BF_>BF_{thresh})$.2", "N2.ICC01.eff02", "$P(BF_>BF_{thresh})$.3")]
final_table_modified <- cbind(final_table_modified, new_cols)

#reorder columns
final_table_modified <- final_table_modified[, c(1,2,3,4,9,10,5,6,11,12,7,8,13,14)]

# change format
final_table_formatted <- final_table_modified %>%
  mutate_at(vars(4, 6, 8, 10,12, 14), ~ format(round(as.numeric(.), 3), nsmall = 3))  # Format columns 5, 7, 9, 11 to three decimals

# Print
print(xtable(final_table_formatted), include.rownames = FALSE) 
```
